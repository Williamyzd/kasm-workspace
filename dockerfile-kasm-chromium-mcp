ARG BASE_TAG="1.17.0"
ARG BASE_IMAGE="kasmweb_core-ubuntu-jammy"
FROM registry.cn-hangzhou.aliyuncs.com/reg_pub/$BASE_IMAGE:$BASE_TAG
USER root

ENV HOME /home/kasm-default-profile
ENV STARTUPDIR /dockerstartup
ENV INST_SCRIPTS $STARTUPDIR/install
WORKDIR $HOME

######### Customize Container Here ###########

# Install Chromium
COPY ./src/ubuntu/install/chromium $INST_SCRIPTS/chromium/
RUN bash $INST_SCRIPTS/chromium/install_chromium.sh && rm -rf $INST_SCRIPTS/chromium/

# Update the desktop environment to be optimized for a single application
RUN cp $HOME/.config/xfce4/xfconf/single-application-xfce-perchannel-xml/* $HOME/.config/xfce4/xfconf/xfce-perchannel-xml/
RUN cp /usr/share/backgrounds/bg_kasm.png /usr/share/backgrounds/bg_default.png
RUN apt-get remove -y xfce4-panel

# Security modifications
COPY ./src/ubuntu/install/misc/single_app_security.sh $INST_SCRIPTS/misc/
RUN  bash $INST_SCRIPTS/misc/single_app_security.sh -t && rm -rf $INST_SCRIPTS/misc/
COPY ./src/common/chrome-managed-policies/urlblocklist.json /etc/chromium/policies/managed/urlblocklist.json

# Setup the custom startup script that will be invoked when the container starts
#ENV LAUNCH_URL  http://kasmweb.com

COPY ./src/ubuntu/install/chromium/custom_startup.sh $STARTUPDIR/custom_startup.sh
RUN chmod +x $STARTUPDIR/custom_startup.sh

# Install Custom Certificate Authority
# COPY ./src/ubuntu/install/certificates $INST_SCRIPTS/certificates/
# RUN bash $INST_SCRIPTS/certificates/install_ca_cert.sh && rm -rf $INST_SCRIPTS/certificates/

ENV KASM_RESTRICTED_FILE_CHOOSER=1
COPY ./src/ubuntu/install/gtk/ $INST_SCRIPTS/gtk/
RUN bash $INST_SCRIPTS/gtk/install_restricted_file_chooser.sh



 

######### End Customizations ###########

RUN chown 1000:0 $HOME
RUN $STARTUPDIR/set_user_permission.sh $HOME

ENV HOME /home/kasm-user
WORKDIR $HOME
RUN mkdir -p $HOME && chown -R 1000:0 $HOME




# mcp 
# 定义环境变量
ENV UV_INDEX_URL=https://pypi.tuna.tsinghua.edu.cn/simple
ENV EXTRA_INDEX_URL=https://pypi.tuna.tsinghua.edu.cn/simple
ENV WEB_DIR=$HOME/app
ENV MCP_CONFIG=$WEB_DIR/config 
ENV BROWER_USER_DIR=$WEB_DIR/brower-user-dir  
ENV WEB_PYTHON_ENV=$WEB_DIR/mcp-env
ENV WEB_LOG=$WEB_DIR/log


RUN mkdir -p ${BROWER_USER_DIR} && \
    mkdir -p $WEB_LOG && \
    mkdir -p $MCP_CONFIG 

COPY ./mcp/start.sh        ${MCP_CONFIG}/
COPY ./mcp/config.json     ${MCP_CONFIG}/
COPY ./mcp/setup_20.x      ${MCP_CONFIG}/nodesource_setup.sh   

# 安装nodejs和pip
# 
RUN chmod +x ${MCP_CONFIG}/nodesource_setup.sh && \
    chmod +x ${MCP_CONFIG}/start.sh && \
    bash ${MCP_CONFIG}/nodesource_setup.sh && apt-get update && \
    apt-get install -y --no-install-recommends nodejs python3-pip && \
    pip config set global.index-url $UV_INDEX_URL && \
    pip config set global.extra-index-url $EXTRA_INDEX_URL && \
    python3 -m pip install --upgrade pip && \
    rm -rf /var/lib/apt/lists/* && rm -f ${MCP_CONFIG}/nodesource_setup.sh  
#     pip install uv && \
#     uv venv $WEB_PYTHON_ENV --python 3.12 && \
#     . $WEB_PYTHON_ENV/bin/activate && \
#     uv pip install playwright mcpo 
USER 1000